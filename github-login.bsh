#! /bin/bash

##   github-login.bsh   last update: 2018-03-30

##  Bash-shell script to create the github 'simple' login example entirely from scratch.

##  Note:  expect-tcl is used to run the feathers-cli steps.
##  Also, there is a bit of a debate if sudo is required for the feathers installation.  I
##  am using sudo to make the command global in nature.


##	Be sure to run the feathers install gist first!


##      ./config/default.json changes  --  YOU WILL NEED TO CHANGE THESE!
GITHUB_CLIENT_ID='dccac33a9360323fe2af'                         ;
GITHUB_CLIENT_SECRET='960393c181f10a44527c7dc6e4196317939f3c59' ;
##  get credentials here:  https://github.com/settings/developers

THIS_IPADDR=$(dig +short myip.opendns.com @resolver1.opendns.com. ;);


FileNameWithExtension=${0##*/}                       ;
FileNameWithoutExtension=${FileNameWithExtension%.*} ;
TimeStamp=$(date "+%Y-%m-%d %r")                     ;

echo -n  'node version:     '  ;  node     --version   ;       ##      8.11.1 at the time of this writing
echo -n  'npm version:      '  ;  npm      --version   ;       ##      5.6.0 at the time of this writing
echo -n  'feathers version: '  ;  feathers --version   ;       ##      3.6.1 at the time of this writing


rm -Rf	./${FileNameWithoutExtension}/ ;  ## just in case one already exists.
mkdir	./${FileNameWithoutExtension}/  && cd	./${FileNameWithoutExtension}/ ;

##     feathers generate  app;   ## taking all the defaults, except for the description
export FileNameWithExtension;
export TimeStamp;
expect <(cat <<'END_OF_GENERATE_APP'
	#	generates an application, taking ALL the defaults

	#	written from https://docs.feathersjs.com/guides/chat/creating.html
	 
	set timeout -1
	 
	spawn feathers generate app;
	 
	expect -re ".*Project name.*"
	send -- "\r"
			## defaults to the name of the directory
	 
	expect -re ".*Description.*"
	send -- "This app created with expect and $env(FileNameWithExtension) $env(TimeStamp)!\r"
			## optional description
	 
	expect -re ".*What folder should the source files live in\?.*\\\(src\\\).*"
	send -- "\r"
			## defaults to 'src'
	 
	expect -re ".*Which package manager are you using \\\(has to be installed globally\\\)?.*"
	send -- "\r"
			## defaults to 'npm'
	 
	expect -re ".*What type of API are you making.*"
	send -- "\r"
			## defaults to REST & Realtime via Socket.io
	expect eof
END_OF_GENERATE_APP
)	## end of feathers generate app



##	feathers generate authentication;  ## all defaults
expect <(cat <<'END_OF_GENERATE_AUTH'
	#	generates an authentication for Github

	#	written from	https://docs.feathersjs.com/guides/chat/authentication.html
	 
	set timeout -1
	 
	set UPARROW	\x1B\[A;
	set DOWNARROW	\x1B\[B;

	spawn	feathers generate authentication ;
	 
		expect	-re ".*What authentication providers do you want to use\?.*"
	  send	-- " ${DOWNARROW}${DOWNARROW}${DOWNARROW}${DOWNARROW} \r"	
		    ## return defaults to Local Storage
		    ## first space to de-select 'local', DOWNARROW four times, final space to select 'Github', and return
	 
	expect	-re ".*What is the name of the user \\\(entity\\\) service.*"
	send	-- "\r"
		## default answer is 'users'
	 
	expect	-re ".*What kind of service is it\?.*"
	send	-- "\r"
		## default answer is NeDB

	expect	-re ".*What is the database connection string\?.*"
	send	-- "\r"
		## default answer is nedb://../data

	 
	expect eof
END_OF_GENERATE_AUTH
)	## end of feathers generate authentication


## modify the default.json file if you are using github (you will have to change these values!)
## values came from   https://console.developers.github.com/apis/api under credidentials
sed --in-place --file=- ./config/default.json  << END_OF_SED_CONFIG_DEFAULT ;
s/"host": "localhost",/"host": "${THIS_IPADDR}",/;
s/your github client id/${GITHUB_CLIENT_ID}/;
s/your github client secret/${GITHUB_CLIENT_SECRET}/;
END_OF_SED_CONFIG_DEFAULT

echo " dont forget to change the IP ## in both the ./config/default.json  *AND*  the github-applications page (make sure they match)";


sed --in-place --file=- ./public/index.html << END_OF_INDEX_HTML ;
/<h2 class="center-text">A REST and realtime API layer for modern applications.<\/h2>/ a\
<p class="center-text"><br\/>\\
  <a href="/auth/github">Login With Github<\/a>\\
  &nbsp;\\
  <a href="javascript: feathersClient.logout(); Cookies.remove('feathers-jwt'); window.location.reload(true);">Log Out Of Github<\/a>\\
  <br /><br />\\
  Login reply will be in your console (ctrl-shift-I or right-click and select 'view console')\\
<\/p>\\
<script type="text/javascript"  src="//unpkg.com/@feathersjs/client@^3.0.0/dist/feathers.js"></script>\\
<script type="text/javascript"  src="//unpkg.com/socket.io-client@1.7.3/dist/socket.io.js"></script>\\
<!-- added for github logout -->\\
<script type="text/javascript"  src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>\\
<script type="text/javascript"  src="//cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"></script>\\
<!-- end of added for github logout -->\\
<script>\\
  // Socket.io is exposed as the \`io\` global.\\
  var socket = io(':3030', {transports: ['websocket']});\\
  // feathers-client is exposed as the \`feathers\` global.\\
  var feathersClient = feathers()\\
	    //.configure(feathers.hooks()) commented out with 3.0\\
    .configure(feathers.socketio(socket))\\
    .configure(feathers.authentication({\\
      cookie: 'feathers-jwt'\\
    }));\\
\\
  feathersClient.authenticate()\\
    .then(response => {\\
      console.info('Feathers Client has Authenticated with the JWT access token!');\\
      console.log(response);\\
    })\\
    .catch(error => {\\
      console.info("We have not logged in with OAuth, yet.  This means there's no cookie storing the accessToken.  As a result, feathersClient.authenticate() failed.");\\
      console.log(error);\\
    });\\
</script>\\
END_OF_INDEX_HTML

cat <<END_OF_SCRIPT;
Feathers github login app should now be built.  Did you change your ./config/default.json values?
Client id in your ./config/default.json values file: ${GITHUB_CLIENT_ID}
Client secret in your ./config/default.json values file: ${GITHUB_CLIENT_SECRET}
Now run ' cd ./${FileNameWithoutExtension}/ ; npm start; ' to try it out.
END_OF_SCRIPT
#
#
