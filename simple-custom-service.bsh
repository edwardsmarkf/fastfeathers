#! /bin/bash

##	simple-custom-service.bsh  2018-03-26

##  Bash-shell script to create a ONE-LINE custom service example entirely from scratch.
##  the only line of code changed is in the ./src/services/SERVICENAME.class.js  file.

##  written from  https://docs.feathersjs.com/guides/basics/services.html

##  Note:  expect-tcl is used to run the feathers-cli steps.
##  Also, there is a bit of a debate if sudo is required for the feathers installation.  I
##  am using sudo to make the command global in nature.

##	Be sure to run the feathers install gist first!

SERVICE_NAME='flipflop';
FEATHERS_PORT=3030;

THIS_IPADDR=$(dig +short myip.opendns.com @resolver1.opendns.com. ;);

echo -n  'node version:     '  ;  node     --version   ;       ##      8.9.4 used in this writing
echo -n  'npm version:      '  ;  npm      --version   ;       ##      5.6.0 at the time of this writing
echo -n  'feathers version: '  ;  feathers --version   ;       ##      3.6.1 at the time of this writing

FileNameWithExtension=${0##*/}                       ;
FileNameWithoutExtension=${FileNameWithExtension%.*} ;
TimeStamp=`date "+%Y-%m-%d %r"`                      ;

rm -Rf	./${FileNameWithoutExtension}/ ;  ## just in case one already exists.
mkdir	./${FileNameWithoutExtension}/ &&   cd  ./${FileNameWithoutExtension}/   ;

##     feathers generate  app;   ## taking all the defaults, except for the description
export FileNameWithExtension
expect <(cat <<'END_OF_GENERATE_APP'
	#	generates an application, taking ALL the defaults

	#	written from https://docs.feathersjs.com/guides/chat/creating.html
	 
	set timeout -1
	 
	spawn feathers generate app;
	 
	expect -re ".*Project name.*"
	send -- "\r"
			## defaults to the name of the directory
	 
	expect -re ".*Description.*"
	send -- "This app created with expect and $env(FileNameWithExtension)!\r"
			## optional description
	 
	expect -re ".*What folder should the source files live in\?.?\\\(src\\\).*"
	send -- "\r"
			## defaults to 'src'
	 
	expect -re ".*Which package manager are you using \\\(has to be installed globally\\\)?.*"
	send -- "\r"
			## defaults to 'npm'
	 
	expect -re ".*What type of API are you making.*"
	send -- "\r"
			## defaults to REST & Realtime via Socket.io
	expect eof
END_OF_GENERATE_APP
)	## end of feathers generate app


export SERVICE_NAME;
##		feathers generate service;   ## all defaults except for the service name - "testtable"
expect <(cat <<'END_OF_GEN_SERVICE'

	#	creates a service:	reverse  (all the defaults)
	#	written from:	https://docs.feathersjs.com/guides/chat/service.html

	set UPARROW	\x1B\[A;
	set DOWNARROW	\x1B\[B;
  
	set timeout -1
	 
	spawn	feathers generate service;
	 
	expect	-re ".*What kind of service is it?.*"
	send	-- "${DOWNARROW}${DOWNARROW}${DOWNARROW}${DOWNARROW}${DOWNARROW}${DOWNARROW}\r"
			## defaults to NeDB
			## one downarrow selects "MongoDB"
			## 2 - Mongoose
			## 3 - Sequelize
			## 4 - KnexJS
			## 5 - RethinDB
			## 6 - custom service
	 
	expect	-re ".*What is the name of the service?.*"
	send	-- "$env(SERVICE_NAME)\r"
			## testtable
	 
	expect	-re ".*Which path should the service be registered on?.*"
	send	-- "\r"
			## defaults to /reverse
	 
	expect eof
END_OF_GEN_SERVICE
)	## end of feathers generate service



#sed --in-place --file=- ./src/services/${SERVICE_NAME}/${SERVICE_NAME}.class.js  <<END_OF_SED_REVERSE_CLASS ;
#s|id, text: \`A new message with ID: \${id}\!\`|id, text: \`ID reversed: \${id.split('').reverse().join('')}\` // ${FileNameWithExtension}|;
#END_OF_SED_REVERSE_CLASS

sed --in-place --file=- ./src/services/${SERVICE_NAME}/${SERVICE_NAME}.class.js  <<END_OF_SED_REVERSE_CLASS ;
s|      id, text: \`A new message with ID: \${id}\!\`|\
//    id, text: \`A new message with ID: \${id}\!\` -- line commented out by ${FileNameWithExtension}\n\
      id, text: \`ID reversed: \${id.split('').reverse().join('')}\` // -- line added by ${FileNameWithExtension}|;
END_OF_SED_REVERSE_CLASS


sed --in-place --file=- ./config/default.json  << END_OF_SED_CONFIG_DEFAULT ;
s/"host": "localhost",/"host": "${THIS_IPADDR}",/;
END_OF_SED_CONFIG_DEFAULT


cat <<END_OF_SCRIPT;
Only one line of code was changed in  ./src/services/${SERVICE_NAME}/${SERVICE_NAME}.class.js
Now run '  cd  ./${FileNameWithoutExtension}/ ; npm start; ' to try it out.
click on this to test:  http://${THIS_IPADDR}:${FEATHERS_PORT}/${SERVICE_NAME}/%21%21skrow-siht-kniht-i
END_OF_SCRIPT
##
##
